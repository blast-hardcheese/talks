/*
 * This file was generated by guardrail (https://github.com/guardrail-dev/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package funscala.generated.definitions
import cats.syntax.either._
import io.circe.syntax._
import cats.instances.all._
import _root_.funscala.generated.Implicits._
case class LoginPreseed(lastLogin: Option[java.time.OffsetDateTime] = None)
object LoginPreseed {
  implicit val encodeLoginPreseed: _root_.io.circe.Encoder.AsObject[LoginPreseed] = {
    _root_.io.circe.Encoder.AsObject.instance[LoginPreseed](a => _root_.io.circe.JsonObject.fromIterable(_root_.scala.Vector(("lastLogin", a.lastLogin.asJson))))
  }
  implicit val decodeLoginPreseed: _root_.io.circe.Decoder[LoginPreseed] = new _root_.io.circe.Decoder[LoginPreseed] { final def apply(c: _root_.io.circe.HCursor): _root_.io.circe.Decoder.Result[LoginPreseed] = for (v0 <- c.downField("lastLogin").as[Option[java.time.OffsetDateTime]]) yield LoginPreseed(v0) }
}